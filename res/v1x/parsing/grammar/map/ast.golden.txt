SUCCESS
Program( # input.cq:1:1..6:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..10
      value: 10
    )
  >
  statements: <
    StatementList( # input.cq:2:10..6:1
      items: [
        Mapping( # input.cq:4:1..26
          alias: <
            Identifier( # input.cq:4:8..13
              name: three
            )
          >
          expr: <
            IntegerLiteral( # input.cq:4:5..6
              value: 3
            )
          >
          annotations: [
            AnnotationData( # input.cq:4:15..26
              interface: <
                Identifier( # input.cq:4:15..20
                  name: first
                )
              >
              operation: <
                Identifier( # input.cq:4:21..26
                  name: annot
                )
              >
              operands: <
                ExpressionList(
                  items: []
                )
              >
            )
          ]
        )
        Mapping( # input.cq:5:1..50
          alias: <
            Identifier( # input.cq:5:5..15
              name: also_three
            )
          >
          expr: <
            Identifier( # input.cq:5:18..23
              name: three
            )
          >
          annotations: [
            AnnotationData( # input.cq:5:25..37
              interface: <
                Identifier( # input.cq:5:25..31
                  name: second
                )
              >
              operation: <
                Identifier( # input.cq:5:32..37
                  name: annot
                )
              >
              operands: <
                ExpressionList(
                  items: []
                )
              >
            )
            AnnotationData( # input.cq:5:39..50
              interface: <
                Identifier( # input.cq:5:39..44
                  name: third
                )
              >
              operation: <
                Identifier( # input.cq:5:45..50
                  name: annot
                )
              >
              operands: <
                ExpressionList(
                  items: []
                )
              >
            )
          ]
        )
      ]
    )
  >
)

