SUCCESS
Program( # input.cq:1:1..9:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.2
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..9
      value: 1
    )
  >
  statements: <
    StatementList( # input.cq:2:1..9:11
      items: [
        Variables( # input.cq:4:1..11
          names: [
            Identifier( # input.cq:4:5..6
              name: i
            )
          ]
          typ: <
            Identifier( # input.cq:4:8..11
              name: int
            )
          >
          annotations: []
        )
        IfElse( # input.cq:6:1..8:2
          branches: [
            IfElseBranch(
              condition: <
                CmpLt( # input.cq:6:5..10
                  lhs: <
                    Identifier( # input.cq:6:5..6
                      name: i
                    )
                  >
                  rhs: <
                    IntegerLiteral( # input.cq:6:9..10
                      value: 5
                    )
                  >
                )
              >
              body: <
                StatementList( # input.cq:6:5..8:10
                  items: [
                    BreakStatement( # input.cq:7:5..10
                      annotations: []
                    )
                  ]
                )
              >
            )
          ]
          otherwise: -
          annotations: []
        )
      ]
    )
  >
)

