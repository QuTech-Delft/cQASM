SUCCESS
Program( # input.cq:1:1..11:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.2
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..9
      value: 1
    )
  >
  statements: <
    StatementList( # input.cq:2:1..11:11
      items: [
        Variables( # input.cq:4:1..11
          names: [
            Identifier( # input.cq:4:5..6
              name: i
            )
          ]
          typ: <
            Identifier( # input.cq:4:8..11
              name: int
            )
          >
          annotations: []
        )
        Bundle( # input.cq:6:1..10
          items: [
            Instruction( # input.cq:6:1..10
              name: <
                Identifier(
                  name: set
                )
              >
              condition: -
              operands: <
                ExpressionList(
                  items: [
                    Identifier( # input.cq:6:5..6
                      name: i
                    )
                    IntegerLiteral( # input.cq:6:9..10
                      value: 0
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        ForLoop( # input.cq:7:1..10:2
          initialize: -
          condition: <
            CmpLt( # input.cq:7:8..14
              lhs: <
                Identifier( # input.cq:7:8..9
                  name: i
                )
              >
              rhs: <
                IntegerLiteral( # input.cq:7:12..14
                  value: 10
                )
              >
            )
          >
          update: -
          body: <
            StatementList( # input.cq:7:5..10:18
              items: [
                Bundle( # input.cq:8:5..8
                  items: [
                    Instruction( # input.cq:8:5..8
                      name: <
                        Identifier( # input.cq:8:5..6
                          name: x
                        )
                      >
                      condition: -
                      operands: <
                        ExpressionList( # input.cq:8:7..8
                          items: [
                            Identifier( # input.cq:8:7..8
                              name: q
                            )
                          ]
                        )
                      >
                      annotations: []
                    )
                  ]
                  annotations: []
                )
                Bundle( # input.cq:9:5..18
                  items: [
                    Instruction( # input.cq:9:5..18
                      name: <
                        Identifier(
                          name: set
                        )
                      >
                      condition: -
                      operands: <
                        ExpressionList(
                          items: [
                            Identifier( # input.cq:9:9..10
                              name: i
                            )
                            Add( # input.cq:9:13..18
                              lhs: <
                                Identifier( # input.cq:9:13..14
                                  name: i
                                )
                              >
                              rhs: <
                                IntegerLiteral( # input.cq:9:17..18
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                      annotations: []
                    )
                  ]
                  annotations: []
                )
              ]
            )
          >
          annotations: []
        )
      ]
    )
  >
)

