SUCCESS
Program( # input.cq:1:1..11:1
  api_version: 1.2
  version: <
    Version( # input.cq:1:9..12
      items: 1.2
    )
  >
  num_qubits: 1
  error_model: -
  subcircuits: [
    Subcircuit( # input.cq:6:1..10
      name: 
      iterations: 1
      bundles: []
      annotations: []
      body: <
        Block( # input.cq:6:1..10:10
          statements: [
            BundleExt( # input.cq:6:1..10
              items: [
                SetInstruction( # input.cq:6:1..10
                  lhs: <
                    VariableRef( # input.cq:6:5..6
                      variable --> <
                        Variable( # input.cq:4:5..6
                          name: i
                          typ: <
                            Int(
                              assignable: 1
                            )
                          >
                          annotations: []
                        )
                      >
                    )
                  >
                  rhs: <
                    ConstInt( # input.cq:6:9..10
                      value: 0
                    )
                  >
                  condition: <
                    ConstBool(
                      value: 1
                    )
                  >
                  annotations: []
                )
              ]
              annotations: []
            )
            ForLoop( # input.cq:7:1..10:2
              initialize: -
              condition: <
                Function( # input.cq:7:8..14
                  name: operator<
                  operands: [
                    VariableRef( # input.cq:7:8..9
                      variable --> <
                        Variable( # input.cq:4:5..6
                          name: i
                          typ: <
                            Int(
                              assignable: 1
                            )
                          >
                          annotations: []
                        )
                      >
                    )
                    ConstInt( # input.cq:7:12..14
                      value: 10
                    )
                  ]
                  return_type: <
                    Bool(
                      assignable: 0
                    )
                  >
                )
              >
              update: -
              body: <
                Block( # input.cq:8:5..9:18
                  statements: [
                    BundleExt( # input.cq:8:5..8
                      items: [
                        Instruction( # input.cq:8:5..8
                          instruction: x(qubit reference)
                          name: x
                          condition: <
                            ConstBool(
                              value: 1
                            )
                          >
                          operands: [
                            QubitRefs( # input.cq:8:7..8
                              index: [
                                ConstInt( # input.cq:2:8..9
                                  value: 0
                                )
                              ]
                            )
                          ]
                          annotations: []
                        )
                      ]
                      annotations: []
                    )
                    BundleExt( # input.cq:9:5..18
                      items: [
                        SetInstruction( # input.cq:9:5..18
                          lhs: <
                            VariableRef( # input.cq:9:9..10
                              variable --> <
                                Variable( # input.cq:4:5..6
                                  name: i
                                  typ: <
                                    Int(
                                      assignable: 1
                                    )
                                  >
                                  annotations: []
                                )
                              >
                            )
                          >
                          rhs: <
                            Function( # input.cq:9:13..18
                              name: operator+
                              operands: [
                                VariableRef( # input.cq:9:13..14
                                  variable --> <
                                    Variable( # input.cq:4:5..6
                                      name: i
                                      typ: <
                                        Int(
                                          assignable: 1
                                        )
                                      >
                                      annotations: []
                                    )
                                  >
                                )
                                ConstInt( # input.cq:9:17..18
                                  value: 1
                                )
                              ]
                              return_type: <
                                Int(
                                  assignable: 0
                                )
                              >
                            )
                          >
                          condition: <
                            ConstBool(
                              value: 1
                            )
                          >
                          annotations: []
                        )
                      ]
                      annotations: []
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
        )
      >
    )
  ]
  mappings: []
  variables: [
    Variable( # input.cq:4:5..6
      name: i
      typ: <
        Int(
          assignable: 1
        )
      >
      annotations: []
    )
  ]
)

