SUCCESS
Program( # input.cq:1:1..12:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..10
      value: 10
    )
  >
  statements: <
    StatementList( # input.cq:2:1..12:49
      items: [
        Bundle( # input.cq:5:1..30
          items: [
            Instruction( # input.cq:5:1..30
              name: <
                Identifier( # input.cq:5:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:5:3..30
                  items: [
                    Index( # input.cq:5:3..7
                      expr: <
                        Identifier( # input.cq:5:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:5:5..6
                          items: [
                            IndexItem( # input.cq:5:5..6
                              index: <
                                IntegerLiteral( # input.cq:5:5..6
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:5:9..30
                      rows: [
                        ExpressionList( # input.cq:5:10..16
                          items: [
                            IntegerLiteral( # input.cq:5:10..11
                              value: 1
                            )
                            FloatLiteral( # input.cq:5:13..16
                              value: 2
                            )
                          ]
                        )
                        ExpressionList( # input.cq:5:18..29
                          items: [
                            Add( # input.cq:5:18..26
                              lhs: <
                                FloatLiteral( # input.cq:5:18..21
                                  value: 3
                                )
                              >
                              rhs: <
                                Identifier( # input.cq:5:24..26
                                  name: im
                                )
                              >
                            )
                            IntegerLiteral( # input.cq:5:28..29
                              value: 4
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:8:1..29
          items: [
            Instruction( # input.cq:8:1..29
              name: <
                Identifier( # input.cq:8:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:8:3..29
                  items: [
                    Index( # input.cq:8:3..7
                      expr: <
                        Identifier( # input.cq:8:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:8:5..6
                          items: [
                            IndexItem( # input.cq:8:5..6
                              index: <
                                IntegerLiteral( # input.cq:8:5..6
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:8:9..29
                      rows: [
                        ExpressionList( # input.cq:8:10..18
                          items: [
                            FloatLiteral( # input.cq:8:10..13
                              value: 1
                            )
                            FloatLiteral( # input.cq:8:15..18
                              value: 2
                            )
                          ]
                        )
                        ExpressionList( # input.cq:8:20..28
                          items: [
                            FloatLiteral( # input.cq:8:20..23
                              value: 3
                            )
                            FloatLiteral( # input.cq:8:25..28
                              value: 4
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:11:1..49
          items: [
            Instruction( # input.cq:11:1..49
              name: <
                Identifier( # input.cq:11:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:11:3..49
                  items: [
                    Index( # input.cq:11:3..7
                      expr: <
                        Identifier( # input.cq:11:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:11:5..6
                          items: [
                            IndexItem( # input.cq:11:5..6
                              index: <
                                IntegerLiteral( # input.cq:11:5..6
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:11:9..49
                      rows: [
                        ExpressionList( # input.cq:11:10..48
                          items: [
                            FloatLiteral( # input.cq:11:10..13
                              value: 1
                            )
                            FloatLiteral( # input.cq:11:15..18
                              value: 2
                            )
                            FloatLiteral( # input.cq:11:20..23
                              value: 3
                            )
                            FloatLiteral( # input.cq:11:25..28
                              value: 4
                            )
                            FloatLiteral( # input.cq:11:30..33
                              value: 5
                            )
                            FloatLiteral( # input.cq:11:35..38
                              value: 6
                            )
                            FloatLiteral( # input.cq:11:40..43
                              value: 7
                            )
                            FloatLiteral( # input.cq:11:45..48
                              value: 8
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
      ]
    )
  >
)

