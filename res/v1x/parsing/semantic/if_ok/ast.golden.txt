SUCCESS
Program( # input.cq:1:1..10:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.2
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..10
      value: 10
    )
  >
  statements: <
    StatementList( # input.cq:2:1..10:13
      items: [
        Variables( # input.cq:4:1..12
          names: [
            Identifier( # input.cq:4:5..6
              name: a
            )
          ]
          typ: <
            Identifier( # input.cq:4:8..12
              name: bool
            )
          >
          annotations: []
        )
        Variables( # input.cq:5:1..13
          names: [
            Identifier( # input.cq:5:5..6
              name: q
            )
          ]
          typ: <
            Identifier( # input.cq:5:8..13
              name: qubit
            )
          >
          annotations: []
        )
        IfElse( # input.cq:7:1..9:2
          branches: [
            IfElseBranch(
              condition: <
                Identifier( # input.cq:7:5..6
                  name: a
                )
              >
              body: <
                StatementList( # input.cq:7:5..9:8
                  items: [
                    Bundle( # input.cq:8:5..8
                      items: [
                        Instruction( # input.cq:8:5..8
                          name: <
                            Identifier( # input.cq:8:5..6
                              name: x
                            )
                          >
                          condition: -
                          operands: <
                            ExpressionList( # input.cq:8:7..8
                              items: [
                                Identifier( # input.cq:8:7..8
                                  name: q
                                )
                              ]
                            )
                          >
                          annotations: []
                        )
                      ]
                      annotations: []
                    )
                  ]
                )
              >
            )
          ]
          otherwise: -
          annotations: []
        )
      ]
    )
  >
)

