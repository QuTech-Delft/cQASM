SUCCESS
Program( # input.cq:1:1..35:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:3:8..9
      value: 3
    )
  >
  statements: <
    StatementList( # input.cq:3:1..35:47
      items: [
        Bundle( # input.cq:6:1..16
          items: [
            Instruction( # input.cq:6:1..16
              name: <
                Identifier( # input.cq:6:1..16
                  name: reset-averaging
                )
              >
              condition: -
              operands: <
                ExpressionList(
                  items: []
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Subcircuit( # input.cq:10:1..15
          name: <
            Identifier( # input.cq:10:2..9
              name: average
            )
          >
          iterations: <
            IntegerLiteral( # input.cq:10:10..14
              value: 1000
            )
          >
          annotations: []
        )
        Bundle( # input.cq:12:5..18
          items: [
            Instruction( # input.cq:12:5..18
              name: <
                Identifier( # input.cq:12:5..11
                  name: prep_z
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:12:12..18
                  items: [
                    Index( # input.cq:12:12..18
                      expr: <
                        Identifier( # input.cq:12:12..13
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:12:14..17
                          items: [
                            IndexRange( # input.cq:12:14..17
                              first: <
                                IntegerLiteral( # input.cq:12:14..15
                                  value: 0
                                )
                              >
                              last: <
                                IntegerLiteral( # input.cq:12:16..17
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:13:5..47
          items: [
            Instruction( # input.cq:13:7..20
              name: <
                Identifier( # input.cq:13:7..9
                  name: rx
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:13:10..20
                  items: [
                    Index( # input.cq:13:10..14
                      expr: <
                        Identifier( # input.cq:13:10..11
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:13:12..13
                          items: [
                            IndexItem( # input.cq:13:12..13
                              index: <
                                IntegerLiteral( # input.cq:13:12..13
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    FloatLiteral( # input.cq:13:16..20
                      value: 3.14
                    )
                  ]
                )
              >
              annotations: []
            )
            Instruction( # input.cq:13:23..36
              name: <
                Identifier( # input.cq:13:23..25
                  name: ry
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:13:26..36
                  items: [
                    Index( # input.cq:13:26..30
                      expr: <
                        Identifier( # input.cq:13:26..27
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:13:28..29
                          items: [
                            IndexItem( # input.cq:13:28..29
                              index: <
                                IntegerLiteral( # input.cq:13:28..29
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    FloatLiteral( # input.cq:13:32..36
                      value: 0.23
                    )
                  ]
                )
              >
              annotations: []
            )
            Instruction( # input.cq:13:39..45
              name: <
                Identifier( # input.cq:13:39..40
                  name: h
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:13:41..45
                  items: [
                    Index( # input.cq:13:41..45
                      expr: <
                        Identifier( # input.cq:13:41..42
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:13:43..44
                          items: [
                            IndexItem( # input.cq:13:43..44
                              index: <
                                IntegerLiteral( # input.cq:13:43..44
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:14:5..18
          items: [
            Instruction( # input.cq:14:5..18
              name: <
                Identifier( # input.cq:14:5..7
                  name: rx
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:14:8..18
                  items: [
                    Index( # input.cq:14:8..12
                      expr: <
                        Identifier( # input.cq:14:8..9
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:14:10..11
                          items: [
                            IndexItem( # input.cq:14:10..11
                              index: <
                                IntegerLiteral( # input.cq:14:10..11
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    FloatLiteral( # input.cq:14:14..18
                      value: 3.14
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:15:5..19
          items: [
            Instruction( # input.cq:15:5..19
              name: <
                Identifier( # input.cq:15:5..9
                  name: cnot
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:15:10..19
                  items: [
                    Index( # input.cq:15:10..14
                      expr: <
                        Identifier( # input.cq:15:10..11
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:15:12..13
                          items: [
                            IndexItem( # input.cq:15:12..13
                              index: <
                                IntegerLiteral( # input.cq:15:12..13
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    Index( # input.cq:15:15..19
                      expr: <
                        Identifier( # input.cq:15:15..16
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:15:17..18
                          items: [
                            IndexItem( # input.cq:15:17..18
                              index: <
                                IntegerLiteral( # input.cq:15:17..18
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:16:5..31
          items: [
            Instruction( # input.cq:16:7..13
              name: <
                Identifier( # input.cq:16:7..8
                  name: z
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:16:9..13
                  items: [
                    Index( # input.cq:16:9..13
                      expr: <
                        Identifier( # input.cq:16:9..10
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:16:11..12
                          items: [
                            IndexItem( # input.cq:16:11..12
                              index: <
                                IntegerLiteral( # input.cq:16:11..12
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
            Instruction( # input.cq:16:16..29
              name: <
                Identifier( # input.cq:16:16..18
                  name: rx
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:16:19..29
                  items: [
                    Index( # input.cq:16:19..23
                      expr: <
                        Identifier( # input.cq:16:19..20
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:16:21..22
                          items: [
                            IndexItem( # input.cq:16:21..22
                              index: <
                                IntegerLiteral( # input.cq:16:21..22
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    FloatLiteral( # input.cq:16:25..29
                      value: 1.57
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:19:5..19
          items: [
            Instruction( # input.cq:19:5..19
              name: <
                Identifier( # input.cq:19:5..14
                  name: measure_z
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:19:15..19
                  items: [
                    Index( # input.cq:19:15..19
                      expr: <
                        Identifier( # input.cq:19:15..16
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:19:17..18
                          items: [
                            IndexItem( # input.cq:19:17..18
                              index: <
                                IntegerLiteral( # input.cq:19:17..18
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:23:5..33
          items: [
            Instruction( # input.cq:23:5..33
              name: <
                Identifier( # input.cq:23:5..19
                  name: measure_parity
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:23:20..33
                  items: [
                    Index( # input.cq:23:20..24
                      expr: <
                        Identifier( # input.cq:23:20..21
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:23:22..23
                          items: [
                            IndexItem( # input.cq:23:22..23
                              index: <
                                IntegerLiteral( # input.cq:23:22..23
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    Identifier( # input.cq:23:25..26
                      name: x
                    )
                    Index( # input.cq:23:27..31
                      expr: <
                        Identifier( # input.cq:23:27..28
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:23:29..30
                          items: [
                            IndexItem( # input.cq:23:29..30
                              index: <
                                IntegerLiteral( # input.cq:23:29..30
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    Identifier( # input.cq:23:32..33
                      name: x
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Subcircuit( # input.cq:27:1..8
          name: <
            Identifier( # input.cq:27:2..8
              name: result
            )
          >
          iterations: -
          annotations: []
        )
        Bundle( # input.cq:29:5..17
          items: [
            Instruction( # input.cq:29:5..17
              name: <
                Identifier( # input.cq:29:5..12
                  name: display
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:29:13..17
                  items: [
                    Index( # input.cq:29:13..17
                      expr: <
                        Identifier( # input.cq:29:13..14
                          name: b
                        )
                      >
                      indices: <
                        IndexList( # input.cq:29:15..16
                          items: [
                            IndexItem( # input.cq:29:15..16
                              index: <
                                IntegerLiteral( # input.cq:29:15..16
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:31:5..17
          items: [
            Instruction( # input.cq:31:5..17
              name: <
                Identifier( # input.cq:31:5..12
                  name: display
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:31:13..17
                  items: [
                    Index( # input.cq:31:13..17
                      expr: <
                        Identifier( # input.cq:31:13..14
                          name: b
                        )
                      >
                      indices: <
                        IndexList( # input.cq:31:15..16
                          items: [
                            IndexItem( # input.cq:31:15..16
                              index: <
                                IntegerLiteral( # input.cq:31:15..16
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
      ]
    )
  >
)

