SUCCESS
Program( # input.cq:1:1..11:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..10
      value: 10
    )
  >
  statements: <
    StatementList( # input.cq:2:1..11:40
      items: [
        Bundle( # input.cq:5:1..7:6
          items: [
            Instruction( # input.cq:5:1..7:6
              name: <
                Identifier( # input.cq:5:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:5:3..7:7
                  items: [
                    Index( # input.cq:5:3..7
                      expr: <
                        Identifier( # input.cq:5:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:5:5..6
                          items: [
                            IndexItem( # input.cq:5:5..6
                              index: <
                                IntegerLiteral( # input.cq:5:5..6
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:5:1..7:6
                      rows: [
                        ExpressionList( # input.cq:6:1..5
                          items: [
                            IntegerLiteral( # input.cq:6:1..2
                              value: 1
                            )
                            IntegerLiteral( # input.cq:6:4..5
                              value: 0
                            )
                          ]
                        )
                        ExpressionList( # input.cq:7:1..5
                          items: [
                            IntegerLiteral( # input.cq:7:1..2
                              value: 2
                            )
                            IntegerLiteral( # input.cq:7:4..5
                              value: 3
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:9:1..40
          items: [
            Instruction( # input.cq:9:1..40
              name: <
                Identifier( # input.cq:9:1..2
                  name: x
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:9:36..40
                  items: [
                    Index( # input.cq:9:36..40
                      expr: <
                        Identifier( # input.cq:9:36..37
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:9:38..39
                          items: [
                            IndexItem( # input.cq:9:38..39
                              index: <
                                IntegerLiteral( # input.cq:9:38..39
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
      ]
    )
  >
)

