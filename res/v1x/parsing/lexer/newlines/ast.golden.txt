SUCCESS
Program( # input.cq:1:1..38:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..10
      value: 10
    )
  >
  statements: <
    StatementList( # input.cq:2:10..38:1
      items: [
        Bundle( # input.cq:5:1..7
          items: [
            Instruction( # input.cq:5:1..7
              name: <
                Identifier( # input.cq:5:1..2
                  name: x
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:5:3..7
                  items: [
                    Index( # input.cq:5:3..7
                      expr: <
                        Identifier( # input.cq:5:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:5:5..6
                          items: [
                            IndexItem( # input.cq:5:5..6
                              index: <
                                IntegerLiteral( # input.cq:5:5..6
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:8:1..7
          items: [
            Instruction( # input.cq:8:1..7
              name: <
                Identifier( # input.cq:8:1..2
                  name: x
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:8:3..7
                  items: [
                    Index( # input.cq:8:3..7
                      expr: <
                        Identifier( # input.cq:8:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:8:5..6
                          items: [
                            IndexItem( # input.cq:8:5..6
                              index: <
                                IntegerLiteral( # input.cq:8:5..6
                                  value: 1
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:8:9..15
          items: [
            Instruction( # input.cq:8:9..15
              name: <
                Identifier( # input.cq:8:9..10
                  name: x
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:8:11..15
                  items: [
                    Index( # input.cq:8:11..15
                      expr: <
                        Identifier( # input.cq:8:11..12
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:8:13..14
                          items: [
                            IndexItem( # input.cq:8:13..14
                              index: <
                                IntegerLiteral( # input.cq:8:13..14
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:12:1..13:5
          items: [
            Instruction( # input.cq:12:1..13:5
              name: <
                Identifier( # input.cq:12:1..2
                  name: x
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:13:1..5
                  items: [
                    Index( # input.cq:13:1..5
                      expr: <
                        Identifier( # input.cq:13:1..2
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:13:3..4
                          items: [
                            IndexItem( # input.cq:13:3..4
                              index: <
                                IntegerLiteral( # input.cq:13:3..4
                                  value: 3
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:17:1..20:2
          items: [
            Instruction( # input.cq:17:1..20:2
              name: <
                Identifier( # input.cq:17:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:17:3..20:2
                  items: [
                    Index( # input.cq:17:3..7
                      expr: <
                        Identifier( # input.cq:17:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:17:5..6
                          items: [
                            IndexItem( # input.cq:17:5..6
                              index: <
                                IntegerLiteral( # input.cq:17:5..6
                                  value: 4
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:17:9..20:2
                      rows: [
                        ExpressionList( # input.cq:18:5..9
                          items: [
                            IntegerLiteral( # input.cq:18:5..6
                              value: 0
                            )
                            IntegerLiteral( # input.cq:18:8..9
                              value: 1
                            )
                          ]
                        )
                        ExpressionList( # input.cq:19:5..9
                          items: [
                            IntegerLiteral( # input.cq:19:5..6
                              value: 1
                            )
                            IntegerLiteral( # input.cq:19:8..9
                              value: 0
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:22:1..23:15
          items: [
            Instruction( # input.cq:22:1..23:15
              name: <
                Identifier( # input.cq:22:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:22:3..23:15
                  items: [
                    Index( # input.cq:22:3..7
                      expr: <
                        Identifier( # input.cq:22:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:22:5..6
                          items: [
                            IndexItem( # input.cq:22:5..6
                              index: <
                                IntegerLiteral( # input.cq:22:5..6
                                  value: 5
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:22:9..23:15
                      rows: [
                        ExpressionList( # input.cq:22:10..14
                          items: [
                            IntegerLiteral( # input.cq:22:10..11
                              value: 0
                            )
                            IntegerLiteral( # input.cq:22:13..14
                              value: 1
                            )
                          ]
                        )
                        ExpressionList( # input.cq:23:10..14
                          items: [
                            IntegerLiteral( # input.cq:23:10..11
                              value: 1
                            )
                            IntegerLiteral( # input.cq:23:13..14
                              value: 0
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:25:1..21
          items: [
            Instruction( # input.cq:25:1..21
              name: <
                Identifier( # input.cq:25:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:25:3..21
                  items: [
                    Index( # input.cq:25:3..7
                      expr: <
                        Identifier( # input.cq:25:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:25:5..6
                          items: [
                            IndexItem( # input.cq:25:5..6
                              index: <
                                IntegerLiteral( # input.cq:25:5..6
                                  value: 6
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:25:9..21
                      rows: [
                        ExpressionList( # input.cq:25:10..14
                          items: [
                            IntegerLiteral( # input.cq:25:10..11
                              value: 0
                            )
                            IntegerLiteral( # input.cq:25:13..14
                              value: 1
                            )
                          ]
                        )
                        ExpressionList( # input.cq:25:16..20
                          items: [
                            IntegerLiteral( # input.cq:25:16..17
                              value: 1
                            )
                            IntegerLiteral( # input.cq:25:19..20
                              value: 0
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:28:1..33
          items: [
            Instruction( # input.cq:28:1..33
              name: <
                Identifier( # input.cq:28:1..2
                  name: u
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:28:3..33
                  items: [
                    Index( # input.cq:28:3..7
                      expr: <
                        Identifier( # input.cq:28:3..4
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:28:5..6
                          items: [
                            IndexItem( # input.cq:28:5..6
                              index: <
                                IntegerLiteral( # input.cq:28:5..6
                                  value: 7
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    MatrixLiteral( # input.cq:28:9..33
                      rows: [
                        ExpressionList( # input.cq:28:10..32
                          items: [
                            IntegerLiteral( # input.cq:28:10..11
                              value: 0
                            )
                            IntegerLiteral( # input.cq:28:13..14
                              value: 0
                            )
                            IntegerLiteral( # input.cq:28:16..17
                              value: 1
                            )
                            IntegerLiteral( # input.cq:28:19..20
                              value: 0
                            )
                            IntegerLiteral( # input.cq:28:22..23
                              value: 1
                            )
                            IntegerLiteral( # input.cq:28:25..26
                              value: 0
                            )
                            IntegerLiteral( # input.cq:28:28..29
                              value: 0
                            )
                            IntegerLiteral( # input.cq:28:31..32
                              value: 0
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:31:1..32:25
          items: [
            Instruction( # input.cq:31:1..32:25
              name: <
                Identifier( # input.cq:31:1..11
                  name: load_state
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:31:12..32:25
                  items: [
                    StringLiteral( # input.cq:31:12..32:25
                      value: cqasm::v1x::primitives::Str<<
                        Hello,
                        I'm a multiline string.
                      >>
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:35:1..37:4
          items: [
            Instruction( # input.cq:35:1..37:4
              name: <
                Identifier( # input.cq:35:1..8
                  name: display
                )
              >
              condition: -
              operands: <
                ExpressionList(
                  items: []
                )
              >
              annotations: [
                AnnotationData( # input.cq:35:10..37:4
                  interface: <
                    Identifier( # input.cq:35:10..23
                      name: an_annotation
                    )
                  >
                  operation: <
                    Identifier( # input.cq:35:24..33
                      name: with_json
                    )
                  >
                  operands: <
                    ExpressionList( # input.cq:35:34..37:3
                      items: [
                        JsonLiteral( # input.cq:35:34..37:3
                          value: cqasm::v1x::primitives::Str<<
                            
                                "json": "object"
                          >>
                        )
                      ]
                    )
                  >
                )
              ]
            )
          ]
          annotations: []
        )
      ]
    )
  >
)

