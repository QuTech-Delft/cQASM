SUCCESS
Program( # input.cq:1:1..11:1
  version: <
    Version( # input.cq:1:9..12
      items: 1.0
    )
  >
  num_qubits: <
    IntegerLiteral( # input.cq:2:8..9
      value: 4
    )
  >
  statements: <
    StatementList( # input.cq:2:1..11:20
      items: [
        Mapping( # input.cq:4:1..14
          alias: <
            Identifier( # input.cq:4:12..14
              name: q2
            )
          >
          expr: <
            Index( # input.cq:4:5..9
              expr: <
                Identifier( # input.cq:4:5..6
                  name: q
                )
              >
              indices: <
                IndexList( # input.cq:4:7..8
                  items: [
                    IndexItem( # input.cq:4:7..8
                      index: <
                        IntegerLiteral( # input.cq:4:7..8
                          value: 2
                        )
                      >
                    )
                  ]
                )
              >
            )
          >
          annotations: []
        )
        Bundle( # input.cq:6:1..13
          items: [
            Instruction( # input.cq:6:1..13
              name: <
                Identifier( # input.cq:6:1..5
                  name: wait
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:6:6..13
                  items: [
                    Index( # input.cq:6:6..10
                      expr: <
                        Identifier( # input.cq:6:6..7
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:6:8..9
                          items: [
                            IndexItem( # input.cq:6:8..9
                              index: <
                                IntegerLiteral( # input.cq:6:8..9
                                  value: 0
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    IntegerLiteral( # input.cq:6:12..13
                      value: 1
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:7:1..12
          items: [
            Instruction( # input.cq:7:1..12
              name: <
                Identifier( # input.cq:7:1..5
                  name: wait
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:7:6..12
                  items: [
                    Identifier( # input.cq:7:6..8
                      name: q2
                    )
                    IntegerLiteral( # input.cq:7:10..12
                      value: 10
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:8:1..17
          items: [
            Instruction( # input.cq:8:1..17
              name: <
                Identifier( # input.cq:8:1..5
                  name: wait
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:8:6..17
                  items: [
                    Index( # input.cq:8:6..12
                      expr: <
                        Identifier( # input.cq:8:6..7
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:8:8..11
                          items: [
                            IndexRange( # input.cq:8:8..11
                              first: <
                                IntegerLiteral( # input.cq:8:8..9
                                  value: 1
                                )
                              >
                              last: <
                                IntegerLiteral( # input.cq:8:10..11
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    IntegerLiteral( # input.cq:8:14..17
                      value: 100
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:9:1..15
          items: [
            Instruction( # input.cq:9:1..15
              name: <
                Identifier( # input.cq:9:1..5
                  name: wait
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:9:6..15
                  items: [
                    Index( # input.cq:9:6..12
                      expr: <
                        Identifier( # input.cq:9:6..7
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:9:8..11
                          items: [
                            IndexRange( # input.cq:9:8..11
                              first: <
                                IntegerLiteral( # input.cq:9:8..9
                                  value: 0
                                )
                              >
                              last: <
                                IntegerLiteral( # input.cq:9:10..11
                                  value: 2
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    IntegerLiteral( # input.cq:9:14..15
                      value: 0
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
        Bundle( # input.cq:10:1..20
          items: [
            Instruction( # input.cq:10:1..20
              name: <
                Identifier( # input.cq:10:1..5
                  name: wait
                )
              >
              condition: -
              operands: <
                ExpressionList( # input.cq:10:6..20
                  items: [
                    Index( # input.cq:10:6..14
                      expr: <
                        Identifier( # input.cq:10:6..7
                          name: q
                        )
                      >
                      indices: <
                        IndexList( # input.cq:10:8..13
                          items: [
                            IndexItem( # input.cq:10:8..9
                              index: <
                                IntegerLiteral( # input.cq:10:8..9
                                  value: 0
                                )
                              >
                            )
                            IndexItem( # input.cq:10:10..11
                              index: <
                                IntegerLiteral( # input.cq:10:10..11
                                  value: 2
                                )
                              >
                            )
                            IndexItem( # input.cq:10:12..13
                              index: <
                                IntegerLiteral( # input.cq:10:12..13
                                  value: 3
                                )
                              >
                            )
                          ]
                        )
                      >
                    )
                    IntegerLiteral( # input.cq:10:16..20
                      value: 1000
                    )
                  ]
                )
              >
              annotations: []
            )
          ]
          annotations: []
        )
      ]
    )
  >
)

