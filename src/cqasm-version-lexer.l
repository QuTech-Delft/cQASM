%option noinput nounput noyywrap 8bit nodefault
%option prefix="cqasm_version_"
%option yylineno
%option reentrant bison-bridge bison-locations
%option never-interactive

%{
    /**
     * \file
     * Lexer/tokenizer, generated by Flex.
     */
    #include "cqasm-version-parser.hpp"

    //#define DEBUG(...) fprintf(stderr, __VA_ARGS__)
    #define DEBUG(...)

    #define YY_USER_ACTION yylloc->last_column += yyleng;
    #define LOCATION_RESET \
        yylloc->first_column = 1; yylloc->first_line = 1; \
        yylloc->last_column = 1; yylloc->last_line = 1;
    #define LOCATION_LINE \
        yylloc->last_column = 1; yylloc->last_line += 1;
    #define LOCATION_OVERRIDE_LINE \
        yylloc->last_column = 1; yylloc->last_line = std::strtol(yylval->str + 12, nullptr, 10);
    #define LOCATION_STEP \
        yylloc->first_column = yylloc->last_column; \
        yylloc->first_line = yylloc->last_line;
    #define WITH_STR(TOKNAME) \
        DEBUG("Pushing %s token (%s) starting at %d:%d\n", #TOKNAME, yytext, yylloc->first_line, yylloc->first_column); \
        yylval->str = strdup(yytext); return TOKNAME
    #define WITHOUT_STR(TOKNAME) \
        DEBUG("Pushing %s token starting at %d:%d\n", #TOKNAME, yylloc->first_line, yylloc->first_column); \
        return TOKNAME
    #define OPERATOR \
        DEBUG("Pushing '%c' token starting at %d:%d\n", yytext[0], yylloc->first_line, yylloc->first_column); \
        return yytext[0]
    #define DELETE LOCATION_STEP
    #define YY_NO_UNISTD_H 1

%}

%x MODE_MULTILINE_COMMENT
%x MODE_VERSION
%x MODE_IGNORE_THE_REST

%%

%{
    LOCATION_STEP;
%}

<INITIAL>{
(\n|\r\n?)                                          LOCATION_LINE; DELETE;
\\(\n|\r\n?)                                        LOCATION_LINE; DELETE;
(@@NEXT_LINE=[0-9]+\n|\r\n?)                        LOCATION_OVERRIDE_LINE; DELETE;
(@@NEXT_LINE=[0-9]+\\\n|\r\n?)                      LOCATION_OVERRIDE_LINE; DELETE;
#.*                                                 DELETE;
"//".*                                              DELETE;
"/*"                                                BEGIN(MODE_MULTILINE_COMMENT); DELETE;
[ \t]+                                              DELETE;
(?i:version)                                        BEGIN(MODE_VERSION); WITHOUT_STR(VERSION);
(cQASM)                                             BEGIN(MODE_VERSION); WITHOUT_STR(VERSION);
.                                                   WITHOUT_STR(UNKNOWN);
}

<MODE_MULTILINE_COMMENT>{
(\n|\r\n?)                                          LOCATION_LINE; DELETE;
"*/"                                                BEGIN(INITIAL); DELETE;
.                                                   DELETE;
<<EOF>>                                             BEGIN(MODE_IGNORE_THE_REST); WITHOUT_STR(END_OF_FILE);
}

<MODE_VERSION>{
(\n|\r\n?)                                          LOCATION_LINE; BEGIN(MODE_IGNORE_THE_REST); DELETE;
;                                                   BEGIN(MODE_IGNORE_THE_REST); DELETE;
[ \t]+                                              DELETE;
[0-9]+                                              WITH_STR(INT_LITERAL);
\.                                                  OPERATOR;
.                                                   WITHOUT_STR(UNKNOWN);
}

<MODE_IGNORE_THE_REST>{
(\n|\r\n?)                                          LOCATION_LINE; DELETE;
.                                                   DELETE;
}
