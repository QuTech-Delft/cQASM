/** \file
 * Contains helper classes and objects for the lexer and parser generated by flex/bison,
 * as well as the entry points for invoking the parser directly,
 * in case you don't need semantic analysis.
 */

#pragma once

#include "cqasm-annotations.hpp"
#include "v3x/cqasm-parse-result.hpp"
#include "v3x/ScannerAntlr.hpp"

#include <antlr4-runtime.h>
#include <memory>  // unique_ptr
#include <string>


namespace cqasm::v3x::parser {

using SourceLocation = annotations::SourceLocation;

/**
 * Parse using the given file path.
 * Throws an AnalysisError if this fails.
 */
cqasm::v3x::parser::ParseResult parse_file(const std::string &file_path, const std::string &file_name = "<unknown>");

/**
 * Parse the given string.
 * A file_name may be given in addition for use within error messages.
 */
cqasm::v3x::parser::ParseResult parse_string(const std::string &data, const std::string &file_name="<unknown>");


/**
 * Internal helper class for parsing cQASM files.
 */
class ParseHelper {
    /**
     * Scanner doing the actual parsing.
     */
    std::unique_ptr<ScannerAdaptor> scanner_up_;

    /**
     * Name of the file being parsed.
     */
    std::string file_name_;

public:
    explicit ParseHelper(std::unique_ptr<ScannerAdaptor> scanner_up, std::string file_name = "<unknown>");

    /**
     * Does the actual parsing.
     */
    cqasm::v3x::parser::ParseResult parse();
};

} // namespace cqasm::v3x::parser
